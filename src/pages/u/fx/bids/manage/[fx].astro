---
import FxLayout from "../../../../../layouts/FxLayout.astro";
import Text from "../../../../../components/Text.astro";
import { Badge } from "../../../../../components/ui/react/badge";
import { Button } from "../../../../../components/ui/react/button";
import { Input } from "../../../../../components/ui/react/input";
import { Textarea } from "../../../../../components/ui/react/text-area";
import { formatTime } from "../../../../../utilities/helpers/time-formatter";
import { Headers } from "@/constants";

const { fx } = Astro.params;
//@ts-ignore
const res = await fetch(
  `${process.env.API_ENDPOINT}/v1/fx/manage-fx/?${new URLSearchParams({ fx }).toString()}`, {headers: Headers}
);
const data = await res.json();
---

<FxLayout title=`Manage Fx | ${data?.fx?.title}`>
  <div
    class="flex flex-col bg-slate-100 dark:bg-natural gap-x-4 ml-24 w-[calc(100%-7rem)] p-8 mt-24 mb-8 h-full rounded-2xl"
  >
    <div class="flex flex-row gap-8 text-foreground">
      <div class="w-full">
        <h1 class="text-xl font-bold mb-4">Manage Fx Bid</h1>
        <div class="flex flex-row space-x-4 w-full">
          <div class="w-3/5">
            <h2 class="font-semibold">General information</h2>
            <div class="flex flex-col my-8 gap-y-4">
              <div class="flex justify-between gap-x-4 w-full">
                <span class="w-1/2">
                  <label
                    for="title"
                    class="block text-sm font-medium text-gray-500">Title</label
                  >
                  <Textarea
                    className="text-foreground font-medium text-lg w-full border-0 ring-transparent shadow-none focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50"
                    defaultValue={data?.fx?.title}
                    readOnly
                  />
                </span>
                <span class="w-1/2">
                  <label
                    for="title"
                    class="block text-sm font-medium text-gray-500"
                    >Currency</label
                  >
                  <Input
                    className="text-foreground font-medium text-lg w-full"
                    defaultValue={data?.fx?.currency.toUpperCase()}
                    readOnly
                  />
                </span>
              </div>

              <div class="flex justify-between gap-x-4 w-full">
                <span class="w-1/2">
                  <label
                    for="title"
                    class="block text-sm font-medium text-gray-500"
                    >Start Time</label
                  >
                  <Input
                    className="text-foreground font-medium text-lg w-full"
                    defaultValue={formatTime(data?.fx?.startTime)}
                    readOnly
                  />
                </span>
                <span class="w-1/2">
                  <label
                    for="title"
                    class="block text-sm font-medium text-gray-500"
                    >End Time</label
                  >
                  <Input
                    className="text-foreground font-medium text-lg w-full"
                    defaultValue={formatTime(data?.fx?.endTime)}
                    readOnly
                  />
                </span>
              </div>

              <div class="flex justify-between gap-x-4 w-full">
                <span class="w-1/2">
                  <label
                    for="title"
                    class="block text-sm font-medium text-gray-500 pb-2"
                    >Status</label
                  >
                  {
                    data?.fx?.status === "pending" ? (
                      <Badge className="bg-gray-500 hover:bg-gray-500 px-4 text-[14px] text-slate-200">
                        {data?.fx?.status}
                      </Badge>
                    ) : data?.fx?.status === "sent" ? (
                      <Badge className="bg-primary hover:bg-primary px-4 text-[14px] text-slate-200">
                        {data?.fx?.status}
                      </Badge>
                    ) : data?.fx?.status === "expired" ? (
                      <Badge className="bg-red-600 hover:bg-red-600 px-4 text-[14px] text-slate-200">
                        {data?.fx?.status}
                      </Badge>
                    ) : data?.fx?.status === "open" ? (
                      <Badge className="bg-green-600 hover:bg-green-600 px-4 text-[14px] text-slate-200">
                        {data?.fx?.status}
                      </Badge>
                    ) : (
                      <Badge className="bg-gray-500 hover:bg-gray-500 px-4 text-[14px] text-slate-200">
                        {data?.fx?.status}
                      </Badge>
                    )
                  }
                </span>
                <span class="w-1/2">
                  <label
                    for="title"
                    class="block text-sm font-medium text-gray-500"
                    >Last updated</label
                  >
                  <Input
                    className="text-foreground font-medium text-lg w-full"
                    defaultValue={formatTime(data?.fx?.lastUpdatedDate)}
                    readOnly
                  />
                </span>
              </div>
            </div>

            <h2 class="font-semibold">Note</h2>
            <div class="flex flex-col">
              <div class="flex justify-between gap-x-4 w-full">
                <span class="w-full">
                  <Textarea
                    className="text-foreground font-regular text-md w-full border-0 ring-transparent shadow-none focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50"
                    defaultValue={data?.fx?.note}
                    rows={8}
                    readOnly
                  />
                </span>
              </div>
            </div>
          </div>
          <div
            class="flex flex-col justify-between w-2/5 bg-white dark:bg-background-color rounded-xl p-6"
          >
            <div class="w-full h-[85]">
              <h2 class="font-bold pb-4">Bidding recepients</h2>
              <div class="w-full relative overflow-y-auto h-[95%]">
                {
                  data?.fx?.FxRecipients.map((item) => (
                    <div class="flex flex-col">
                      <p class="text-sm font-medium py-1">
                        {(item?.fxBidder?.firstName && item?.fxBidder?.lastName) ? item?.fxBidder?.firstName +
                          " " +
                          item?.fxBidder?.lastName : "User Info Missing"}
                      </p>
                    </div>
                  ))
                }
              </div>
            </div>
            <div class="w-full flex max-h-[15] justify-end">
              <Button
                size="sm"
                className="flex px-12 bg-green-600 hover:bg-green-700 dark:bg-green-600 dark:text-white dark:hover:bg-green-700 flex-end"
                onClick={() => alert("Hello You!")}>Send</Button
              >
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</FxLayout>
